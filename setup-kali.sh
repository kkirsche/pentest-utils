#!/bin/bash

##### (Cosmetic) Colour output
RED="\033[01;31m"      # Issues/Errors
GREEN="\033[01;32m"    # Success
YELLOW="\033[01;33m"   # Warnings/Information
BLUE="\033[01;34m"     # Heading
BOLD="\033[01;01m"     # Highlight
RESET="\033[00m"       # Normal

echo -e "${YELLOW}[${RED}!${YELLOW}] If you haven't, change your root password immediately!"
echo -e "${YELLOW}[*] Sleeping 10 seconds to allow for you to stop this and go do it now!"
sleep 10

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Updating base image${RESET}"
apt-get update 
apt-get -y full-upgrade

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing extended kali toolset${RESET}"
apt-get install -y kali-linux-all

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Linking new target${RESET}"
ln -sn /opt/pentest-utils/new-target.sh /usr/bin/new-target

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Linking staged nmap${RESET}"
ln -sn /opt/pentest-utils/nmap-staged.sh /usr/bin/nmap-staged

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Linking staged unicornscan${RESET}"
ln -sn /opt/pentest-utils/unicorn-staged.sh /usr/bin/unicorn-staged

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Linking staged dirb${RESET}"
ln -sn /opt/pentest-utils/dirb-staged.sh /usr/bin/dirb-staged

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Linking smb enumeration script${RESET}"
ln -sn /opt/pentest-utils/smb-enumerator.sh /usr/bin/smb-enumerator

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Linking pattern create and pattern offset into /usr/bin${RESET}"
ln -sn /usr/share/metasploit-framework/tools/pattern_create.rb /usr/bin/pattern_create
ln -sn /usr/share/metasploit-framework/tools/pattern_offset.rb /usr/bin/pattern_offset

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Cloning gotree${RESET}"
cd /opt
git clone https://github.com/kkirsche/gotree.git

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Cloning Linux Exploit Suggester${RESET}"
cd /opt
git clone https://github.com/PenturaLabs/Linux_Exploit_Suggester

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Cloning LinEnum${RESET}"
cd /opt
git clone https://github.com/rebootuser/LinEnum.git

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Cloning linuxprivchecker${RESET}"
cd /opt
git clone https://github.com/sleventyeleven/linuxprivchecker.git

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Cloning Windows Exploit Suggester${RESET}"
cd /opt
git clone https://github.com/GDSSecurity/Windows-Exploit-Suggester.git

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Cloning Powershell Empire${RESET}"
cd /opt/
git clone 'https://github.com/EmpireProject/Empire'
cd Empire
./setup/install.sh

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Downloading various windows binaries${RESET}"
mkdir /opt/windows-extras
cd /opt/windows-extras
wget http://www.tightvnc.com/download/1.3.10/tightvnc-1.3.10_x86.zip
wget https://download.sysinternals.com/files/PSTools.zip
wget https://download.sysinternals.com/files/AccessChk.zip
wget https://the.earth.li/~sgtatham/putty/latest/w32/putty.zip
wget https://the.earth.li/~sgtatham/putty/latest/w32/putty.zip.gpg
wget https://download.sysinternals.com/files/Procdump.zip

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing IP / SIP calculators${RESET}"
apt -y -qq install ipcalc sipcalc

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing ASCII Cinema CLI recorder${RESET}"
apt -y -qq install asciinema

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing Shutter${RESET}"
apt -y -qq install shutter

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing PSMisc${RESET}"
apt -y -qq install psmisc

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing pipe viewer${RESET}"
apt -y -qq install pv

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing NCFTP${RESET}"
apt -y -qq install ncftp

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing ZIP utilities${RESET}"
apt -y -qq install zip unzip

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing Terminator${RESET}"
apt -y -qq install terminator 

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Install various VPN support${RESET}"
for FILE in network-manager-openvpn network-manager-pptp network-manager-vpnc network-manager-openconnect network-manager-iodine; do
  apt -y -qq install "${FILE}"
done

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing bridge-utils${RESET}"
apt -y -qq install bridge-utils

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing http-tunnel${RESET}"
apt -y -qq install http-tunnel

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Install MingW cross compiler${RESET}"
for FILE in mingw-w64 binutils-mingw-w64 gcc-mingw-w64 cmake   mingw-w64-dev mingw-w64-tools   gcc-mingw-w64-i686 gcc-mingw-w64-x86-64   mingw32; do
  apt -y -qq install "${FILE}" 2>/dev/null
done

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing cowsay${RESET}"
apt -y -qq install cowsay

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Removing unnecessary packages${RESET}"
apt -y autoremove

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Updating searchsploit DB${RESET}"
searchsploit -u

echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Updating slocate DB${RESET}"
updatedb

echo -ne "${YELLOW}[?] Would you like to install open-vm tools (previously vmware-tools)? [Y/N] ${RESET}"
read -r -p "" response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
    echo -e "${YELLOW}[${GREEN}+${YELLOW}] ${BLUE}Installing open-vm-tools${RESET}"
    apt -y -qq install open-vm-tools-desktop fuse
else
    echo -e "${BLUE}[*] Not installing open-vm-tools${RESET}"
fi

echo -ne "${YELLOW}[?] Kali Setup is complete. Would you like to reboot now? [Y/N] ${RESET}"
read -r -p "" response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]
then
    echo -e "${YELLOW}[${RED}*${YELLOW}] Rebooting system in 3 seconds. Thank you for using Kali Setup."
    sleep 3
    reboot
else
    echo -e "${YELLOW}[*] Thank you for using Kali Setup."
fi
